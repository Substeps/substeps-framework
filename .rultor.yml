docker:
  image: "iantmoore/mvngitjdk11:latest"
env:
  JAVA_HOME: "/opt/java/openjdk"
install: |-
  export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/java/openjdk/bin"

#docker:
#  image: "adoptopenjdk/maven-openjdk11:latest"
#env:
#  JAVA_HOME: "/opt/java/openjdk"
##  PATH: "/opt/java/openjdk/bin:$PATH"
#install: |-
#   export PATH=:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/java/openjdk/bin
#   apt-get update && apt-get install -y git
   
#  image: "maven:3.6.2-jdk-11"
#env:
#  JAVA_HOME: "/usr/local/openjdk-11"
#  PATH: "/usr/local/openjdk-11/bin:$PATH"
decrypt:
  settings.xml: "repo/settings.xml.asc"
  pubring.gpg: "repo/pubring.gpg.asc"
  secring.gpg: "repo/secring.gpg.asc"
release:
  script: |-
        export newSnapshotVersion=`echo ${tag}-SNAPSHOT | perl -pe 's/^((\d+\.)*)(\d+)(.*)$/$1.($3+1).$4/e'`
        mvn clean verify
        git checkout master
        mvn versions:set "-DnewVersion=${newSnapshotVersion}"
        git commit -am "prepare next version"
        git checkout __rultor
        mvn versions:set "-DnewVersion=${tag}"
        git commit -am "${tag}"
        mvn clean deploy -Prelease -PSubsteps.org --settings /home/r/settings.xml

  commanders:
    - iantmoore

#    mvn clean
#    mvn release:prepare release:perform -B -PSubsteps.org --settings /home/r/settings.xml


#      mvn clean verify
#      mvn versions:set "-DnewVersion=${tag}"
#      git commit -am "${tag}"
#      mvn clean deploy --settings /home/r/settings.xml
#      mvn versions:set "-DnewVersion=${nexttag}-SNAPSHOT"
#      git commit -am "prepare next version"
