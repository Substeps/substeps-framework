
org {
  substeps {
    config {

      current {
        branchname=""   // automatically populated by JGit, if using git
        projectversion=""  // automatically populated via maven
      }

      description="Substeps test suite"  // name of the whole test suite

      executionResultsCollector="org.substeps.report.ExecutionResultsCollector"
        // class responsible for collecting execution result data

      jmxPort=9999  // JMX port used when Substeps run in forked mode

      log {
        unused {
          uncalled=false  // when set to true, uncalled and unsued steps and step impls are logged
              // can lead to spurious results if running a set of tags or specific scenarios
        }
      }
      parameter {
        substitution {
          enabled=true    // allows ${} syntax in steps and scenarios
          start="${"      // token delimiters used for the expression
          end="}"

          normalizeValue=false  // if true then values located will be converted from one charset to another
              // useful when the config files contains accented characters pasted in

          normalize {
            from=ISO-8859-1   // the from charset
            to=UTF-8          // converted to..
          }
        }
      }

      report {
        data {
          base {
            dir=target   // legacy value to specify root location of report
          }
          pretty {
            print=false  // pretty print report json
          }
        }
        rootNodeDescriptionProvider="org.substeps.report.DefaultDescriptionProvider"
          // class to describe the root level node in the report
      }

      reportBuilder="org.substeps.report.ReportBuilder"
        // class that builds the report

      reportDir="target/substeps_report"
        // directory in which to build the report

      rootDataDir="src/test/resources/sample-results-data"
        // directory in which to write results into, and for the report builder to pick up from


      runTestsInForkedVM=false   // run the substeps in a forked VM ?

      step {
        depth {
          description=6   // beyond 6 deep, the Junit runner won't render a description
        }
      }

      glossary{
        // list of step impls not to be included in the glossary - generally test step impls that might be written to aid the testing of the tests, but not shippable..
        excludeStepImplementationClassNames=[
          "org.substeps.webdriver.TestWebdriverStepImplementations"
        ]
      }
    }



    baseExecutionConfig {
      // all execution configs (below) inherit this config

      executionListeners=[
        // set of listeners that receive test started / passed / failed events
        "com.technophobia.substeps.runner.logger.StepExecutionLogger"
      ]
      fastFailParseErrors=true
        // if true, parse failures of all scenarios and substeps result in immediate termination.
        // During development it may be beneficial to relax this.  Parse errors found during execution are
        // still treated as an error
    }




    executionConfigs=[
      // an array of execution configs, each one will be executed sequentially

      {
        dataOutputDir="1"
        description="Substeps test execution description"
        fastFailParseErrors=true
        featureFile=null
        stepImplementationClassNames=[
          "org.substeps.runner.ParsingFromSourceTests$$anonfun$5$StepImpls$3"
        ]
        substepsFile=null
        tags=null
      }
    ]
  }
}
